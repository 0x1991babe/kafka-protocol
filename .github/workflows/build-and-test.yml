name: ci
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  build_and_test:
    name: build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          # this line means that only the main branch writes to the cache
          # benefits: save about 7s per workflow by skipping the actual cache write
          # downsides: PRs that update rust version or changes deps will be slower to iterate on due to changes not being cached.
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build --workspace --all-features
      - run: cargo test --workspace --all-features
  fmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: |
          cd protocol_codegen
          cargo fmt -- --check
  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Install cargo-hack
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-hack@0.6.31
      - run: cargo hack --feature-powerset clippy --all-targets --locked -- -D warnings
